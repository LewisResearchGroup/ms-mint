[build-system]
requires = ["setuptools", "wheel", "setuptools_scm"]
build-backend = "setuptools.build_meta"

[project]
name = "ms-mint"
description = "Python library for large-scale targeted metabolomics."
readme = "README.md"
requires-python = ">=3.9"
authors = [
  {name = "Soren Wacker", email = "swacker@ucalgary.ca"}
]
urls = { "Homepage" = "https://github.com/LewisResearchGroup/ms-mint" }
classifiers = [
  "Programming Language :: Python :: 3",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent"
]
dependencies = [
  "six",
  "jsonschema",
  "entrypoints",
  "pygments",
  "pexpect",
  "decorator",
  "pillow",
  "lxml",
  "pandas",
  "matplotlib",
  "seaborn",
  "pyteomics",
  "scikit-learn",
  "molmass",
  "pymzml",
  "plotly",
  "colorlover",
  "tqdm",
  "ipywidgets",
  "ipyfilechooser",
  "openpyxl",
  "pyarrow",
  "tables",
  "h5py",
  "hdf5plugin"
]
dynamic = ["version"]

[project.scripts]
ms-mint-convert = "ms_mint.scripts.ms_mint_convert:main"

[tool.setuptools.packages.find]
where = ["src"]
include = ["ms_mint*"]

[tool.setuptools_scm]
write_to = "src/ms_mint/_version.py"
version_scheme = "guess-next-dev"
local_scheme = "dirty-tag"

[tool.pytest]
addopts = "--maxfail=1 --disable-warnings"
testpaths = ["tests"]

[tool.ruff]
# Which Python versions to target
target-version = "py312"

# Maximum line length
line-length = 100

# Enable specific rules (linters)
select = [
    "E",  # pycodestyle errors
    "F",  # pyflakes
    "I",  # isort
    "UP", # pyupgrade
    "N",  # pep8-naming
    "D",  # pydocstyle
    "ANN", # flake8-annotations (type hints)
]

# Ignore specific rules
ignore = [
    "D203",  # one-blank-line-before-class
    "D213",  # multi-line-summary-second-line
]

# Configure formatting
[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"

# Configure docstring linting
[tool.ruff.pydocstyle]
convention = "google"  # Use Google style docstrings

# Configure import sorting
[tool.ruff.isort]
known-first-party = ["ms_mint"]
